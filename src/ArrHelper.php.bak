<?php

namespace AProud\Twiew;

use Minwork\Helper\Arr;

class ArrHelper extends Arr
{
	/**
	 *  Do the same as array_merge_recursive, but replace values in nested arrays, instead of merge them in one array
	 *  @param Arr1, Arr2, Arr3 ...
	 *  @return Merged array 
	 */
	static public function mergeRecursiveDistinct(): Array
	{
		$arrays = func_get_args();
		$base = array_shift($arrays);
		if (!is_array($base)) {
			$base = empty($base) ? array() : array($base);
		}
		foreach ($arrays as $append) {
			if (!is_array($append)) {
				$append = array($append);
			}
			foreach ($append as $key => $value) {
				if (!array_key_exists($key, $base) and !is_numeric($key)) {
					$base[$key] = $append[$key];
					continue;
				}
				if (is_array($value) or (isset($base[$key]) && is_array($base[$key])) ) {
					$base[$key] = self::mergeRecursiveDistinct($base[$key], $append[$key]);
				} else {
					if (is_numeric($key)) {
						if (!in_array($value, $base)) {
							$base[] = $value;
						}
					} else {
						$base[$key] = $value;
					}
				}
			}
		}
		return $base;
	}

}